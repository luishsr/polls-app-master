# auto detects a good number of processes to run
worker_processes auto;

#Provides the configuration file context in which the directives that affect connection processing are specified.
events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 8000;
    # Tells the worker to accept multiple connections at a time
    multi_accept on;
}


http {
    # what times to include
    include       /etc/nginx/mime.types;
    # what is the default one
    default_type  application/octet-stream;

    # Sets the path, format, and configuration for a buffered log write
    log_format compression '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $upstream_addr '
        '"$http_referer" "$http_user_agent"';

    server {
        # listen on port 80
        listen 80;

        # save logs here
        access_log /var/log/nginx/access.log compression;

        # nginx root directory
        root /var/www;
        
        # what file to server as index
        index index.html index.htm;

        location /health {
        	return 200 '{"message": "healthy"}';
        	add_header Content-Type application/json;
    	}         
        
        
       add_header 'Access-Control-Allow-Origin' '*';
       add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,
       X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
       add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

           
        # Media: images, icons, video, audio, HTC
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
          expires 1M;
          access_log off;
          add_header Cache-Control "public";
        }

        # Javascript and CSS files
        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }

        # Any route containing a file extension (e.g. /devicesfile.js)
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }
        
		#
		# Wide-open CORS config for nginx
		#
		location / {
		    # First attempt to serve request as file, then
            # as directory, then fall back to redirecting to index.html
            try_files $uri $uri/ /index.html;
     	if ($request_method = 'OPTIONS') {
       		 add_header 'Access-Control-Allow-Origin' '*';
       		 add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
       		 #
      		  # Custom headers and headers various browsers *should* be OK with but aren't
      		  #
      		  add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
      		  #
      		  # Tell client that this pre-flight info is valid for 20 days
       		 #
       		 add_header 'Access-Control-Max-Age' 1728000;
       		 add_header 'Content-Type' 'text/plain; charset=utf-8';
        	 add_header 'Content-Length' 0;
        	 return 204;
     	}
     
     	if ($request_method = 'POST') {
        	add_header 'Access-Control-Allow-Origin' '*' always;
        	add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        	add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        	add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
    	}
    	
     	if ($request_method = 'GET') {
			add_header 'Access-Control-Allow-Origin' '*' always;
 			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
 			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
	    }
}      
        
        
        
        
        
    }
}